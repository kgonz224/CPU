$date
	Tue Nov  6 19:52:03 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module InstructionFetch $end
$var wire 1 ! PCSrc $end
$var wire 1 " BranchAddress $end
$var reg 64 # PC [63:0] $end
$var reg 32 $ instruction [31:0] $end
$var integer 32 % i [31:0] $end
$scope module id $end
$var wire 64 & Address [63:0] $end
$var wire 32 ' Instruction [31:0] $end
$var wire 1 ( RegWrite $end
$var wire 1 ) Reg2Write $end
$var wire 1 * Reg2Loc $end
$var wire 1 ! PCSrc $end
$var wire 1 + OldRegWrite $end
$var wire 1 , MemtoReg $end
$var wire 1 - MemWrite $end
$var wire 1 . MemRead $end
$var wire 1 / Data2Write $end
$var wire 64 0 BranchAddress [63:0] $end
$var wire 1 1 BZ $end
$var wire 1 2 BNZ $end
$var wire 1 3 B $end
$var wire 2 4 ALUSrc [1:0] $end
$var wire 2 5 ALUOp [1:0] $end
$var reg 64 6 Data1 [63:0] $end
$var reg 64 7 Data2 [63:0] $end
$var reg 64 8 signExtInstr [63:0] $end
$scope module controlUnit $end
$var wire 11 9 inst31_21 [10:0] $end
$var reg 2 : ALUOp [1:0] $end
$var reg 2 ; ALUSrc [1:0] $end
$var reg 1 3 Branch $end
$var reg 1 2 BranchNonZero $end
$var reg 1 1 BranchZero $end
$var reg 1 . MemRead $end
$var reg 1 - MemWrite $end
$var reg 1 , MemtoReg $end
$var reg 1 * Reg2Loc $end
$var reg 1 ( RegWrite $end
$upscope $end
$scope module ex $end
$var wire 2 < ALUOp [1:0] $end
$var wire 2 = ALUSrc [1:0] $end
$var wire 64 > Address [63:0] $end
$var wire 1 3 B $end
$var wire 1 2 BNZ $end
$var wire 1 1 BZ $end
$var wire 64 ? Data1 [63:0] $end
$var wire 64 @ Data2 [63:0] $end
$var wire 32 A Instruction [31:0] $end
$var wire 1 . MemRead $end
$var wire 1 B MemToReg $end
$var wire 1 - MemWrite $end
$var wire 1 , MemtoReg $end
$var wire 1 ( RegWrite $end
$var wire 64 C signExtInstr [63:0] $end
$var wire 1 + oldRegWrite $end
$var wire 64 D oldBranchAddress [63:0] $end
$var wire 5 E Reg2Write [4:0] $end
$var wire 1 ! PCSrc $end
$var wire 64 F Data2Write [63:0] $end
$var wire 1 G ALUInst $end
$var reg 64 H ALUInput2 [63:0] $end
$var reg 64 I Results [63:0] $end
$var reg 64 J branchAddress [63:0] $end
$var reg 1 K zero $end
$scope module aluControl $end
$var wire 2 L ALUOp [1:0] $end
$var wire 11 M inst31_21 [10:0] $end
$var reg 4 N control_line [3:0] $end
$upscope $end
$scope module mem $end
$var wire 1 3 B $end
$var wire 1 2 BNZ $end
$var wire 1 1 BZ $end
$var wire 64 O Data2 [63:0] $end
$var wire 32 P Instruction [31:0] $end
$var wire 1 . MemRead $end
$var wire 1 B MemToReg $end
$var wire 1 - MemWrite $end
$var wire 1 ( RegWrite $end
$var wire 64 Q Results [63:0] $end
$var wire 64 R branchAddress [63:0] $end
$var wire 1 K zero $end
$var wire 1 + oldRegWrite $end
$var wire 5 S Reg2Write [4:0] $end
$var wire 64 T Data2Write [63:0] $end
$var reg 1 ! PCSrc $end
$var reg 64 U loadedData [63:0] $end
$var reg 64 V oldBranchAddress [63:0] $end
$scope module wb $end
$var wire 1 B MemToReg $end
$var wire 5 W Reg [4:0] $end
$var wire 1 ( RegWrite $end
$var wire 64 X Results [63:0] $end
$var wire 64 Y loadedData [63:0] $end
$var reg 64 Z Data2Write [63:0] $end
$var reg 5 [ Reg2Write [4:0] $end
$var reg 1 + oldRegWrite $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
xK
bx J
bx I
bx H
xG
bx F
bx E
bx D
bx C
zB
bx A
bx @
bx ?
b0 >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
x3
x2
x1
bx 0
x/
x.
x-
x,
x+
x*
x)
x(
bx '
b0 &
b0 %
bx $
b0 #
x"
x!
$end
#1
1(
b0 4
b0 ;
b0 =
0-
b10 5
b10 :
b10 <
b10 L
0,
0.
02
01
03
0*
b10001011000 9
b10001011000 M
b0 W
b10001011000111110000001111100000 $
b10001011000111110000001111100000 '
b10001011000111110000001111100000 A
b10001011000111110000001111100000 P
b1 %
#2
0)
b0 E
b0 S
b0 [
1+
b1111111111111111111111111111111111111111111111111111111111100000 8
b1111111111111111111111111111111111111111111111111111111111100000 C
b0 7
b0 @
b0 O
b0 6
b0 ?
#6
0!
#101
b100 #
b100 &
b100 >
#102
b1 4
b1 ;
b1 =
b0 5
b0 :
b0 <
b0 L
1,
1.
b11111000010 9
b11111000010 M
b10 W
b11111000010000000000000000000010 $
b11111000010000000000000000000010 '
b11111000010000000000000000000010 A
b11111000010000000000000000000010 P
b10 %
#103
b10 E
b10 S
b10 [
b0 8
b0 C
bx 7
bx @
bx O
bx 6
bx ?
#107
b0xxxxxxxx U
b0xxxxxxxx Y
#108
b0xxxxxxxx F
b0xxxxxxxx T
b0xxxxxxxx Z
#113
0G
b10 N
#114
1K
b0 I
b0 Q
b0 X
b0 H
b100 J
b100 R
#202
b1000 #
b1000 &
b1000 >
#203
b11 W
b11111000010000001000000000000011 $
b11111000010000001000000000000011 '
b11111000010000001000000000000011 A
b11111000010000001000000000000011 P
b11 %
#204
1)
b11 E
b11 S
b11 [
b10000 8
b10000 C
#208
0"
b100 0
b100 D
b100 V
b101 U
b101 Y
#209
1/
b101 F
b101 T
b101 Z
#303
b1100 #
b1100 &
b1100 >
#304
b111 W
b11111000010000010000000000000111 $
b11111000010000010000000000000111 '
b11111000010000010000000000000111 A
b11111000010000010000000000000111 P
b100 %
#305
b111 E
b111 S
b111 [
b100000 8
b100000 C
#404
b10000 #
b10000 &
b10000 >
#405
b0 4
b0 ;
b0 =
0,
0.
b10 5
b10 :
b10 <
b10 L
b10101010000 9
b10101010000 M
b100 W
b10101010000000100000000011100100 $
b10101010000000100000000011100100 '
b10101010000000100000000011100100 A
b10101010000000100000000011100100 P
b101 %
#406
0)
b100 E
b100 S
b100 [
b1000000 8
b1000000 C
#505
b10100 #
b10100 &
b10100 >
#506
b10001010000 9
b10001010000 M
b101 W
b10001010000001000000000001100101 $
b10001010000001000000000001100101 '
b10001010000001000000000001100101 A
b10001010000001000000000001100101 P
b110 %
#507
1)
b101 E
b101 S
b101 [
b10000000 8
b10000000 C
#606
b11000 #
b11000 &
b11000 >
#607
b10001011000 9
b10001011000 M
b10001011000001000000000010100101 $
b10001011000001000000000010100101 '
b10001011000001000000000010100101 A
b10001011000001000000000010100101 P
b111 %
#707
b11100 #
b11100 &
b11100 >
#708
b11001011000 9
b11001011000 M
b1000 W
b11001011000001110000000010101000 $
b11001011000001110000000010101000 '
b11001011000001110000000010101000 A
b11001011000001110000000010101000 P
b1000 %
#709
0)
b1000 E
b1000 S
b1000 [
b11100000 8
b11100000 C
#808
b100000 #
b100000 &
b100000 >
#809
0(
11
1*
b10110100000 9
b10110100000 M
b10110100000000000000000101101000 $
b10110100000000000000000101101000 '
b10110100000000000000000101101000 A
b10110100000000000000000101101000 P
b1001 %
#810
0+
b1011 8
b1011 C
#814
1!
#909
b0 #
b0 &
b0 >
#910
1(
01
0*
b10001011000 9
b10001011000 M
b0 W
b10001011000111110000001111100000 $
b10001011000111110000001111100000 '
b10001011000111110000001111100000 A
b10001011000111110000001111100000 P
b1010 %
#911
b0 E
b0 S
b0 [
1+
b1111111111111111111111111111111111111111111111111111111111100000 8
b1111111111111111111111111111111111111111111111111111111111100000 C
b0 7
b0 @
b0 O
b0 6
b0 ?
#915
0!
#1010
b100 #
b100 &
b100 >
#1011
b1 4
b1 ;
b1 =
b0 5
b0 :
b0 <
b0 L
1,
1.
b11111000010 9
b11111000010 M
b10 W
b11111000010000000000000000000010 $
b11111000010000000000000000000010 '
b11111000010000000000000000000010 A
b11111000010000000000000000000010 P
b1011 %
#1012
b10 E
b10 S
b10 [
b0 8
b0 C
b1 7
b1 @
b1 O
b1 6
b1 ?
#1111
b1000 #
b1000 &
b1000 >
#1112
b11 W
b11111000010000001000000000000011 $
b11111000010000001000000000000011 '
b11111000010000001000000000000011 A
b11111000010000001000000000000011 P
b1100 %
#1113
1)
b11 E
b11 S
b11 [
b10000 8
b10000 C
#1212
b1100 #
b1100 &
b1100 >
#1213
b111 W
b11111000010000010000000000000111 $
b11111000010000010000000000000111 '
b11111000010000010000000000000111 A
b11111000010000010000000000000111 P
b1101 %
#1214
b111 E
b111 S
b111 [
b100000 8
b100000 C
bx 7
bx @
bx O
#1313
b10000 #
b10000 &
b10000 >
#1314
b0 4
b0 ;
b0 =
0,
0.
b10 5
b10 :
b10 <
b10 L
b10101010000 9
b10101010000 M
b100 W
b10101010000000100000000011100100 $
b10101010000000100000000011100100 '
b10101010000000100000000011100100 A
b10101010000000100000000011100100 P
b1110 %
#1315
0)
b100 E
b100 S
b100 [
b1000000 8
b1000000 C
bx 6
bx ?
#1414
b10100 #
b10100 &
b10100 >
#1415
b10001010000 9
b10001010000 M
b101 W
b10001010000001000000000001100101 $
b10001010000001000000000001100101 '
b10001010000001000000000001100101 A
b10001010000001000000000001100101 P
b1111 %
#1416
1)
b101 E
b101 S
b101 [
b10000000 8
b10000000 C
#1515
b11000 #
b11000 &
b11000 >
#1516
b10001011000 9
b10001011000 M
b10001011000001000000000010100101 $
b10001011000001000000000010100101 '
b10001011000001000000000010100101 A
b10001011000001000000000010100101 P
b10000 %
#1616
b11100 #
b11100 &
b11100 >
#1617
b11001011000 9
b11001011000 M
b1000 W
b11001011000001110000000010101000 $
b11001011000001110000000010101000 '
b11001011000001110000000010101000 A
b11001011000001110000000010101000 P
b10001 %
#1618
0)
b1000 E
b1000 S
b1000 [
b11100000 8
b11100000 C
#1717
b100000 #
b100000 &
b100000 >
#1718
0(
11
1*
b10110100000 9
b10110100000 M
b10110100000000000000000101101000 $
b10110100000000000000000101101000 '
b10110100000000000000000101101000 A
b10110100000000000000000101101000 P
b10010 %
#1719
0+
b1011 8
b1011 C
#1723
1!
#1818
b0 #
b0 &
b0 >
#1819
1(
01
0*
b10001011000 9
b10001011000 M
b0 W
b10001011000111110000001111100000 $
b10001011000111110000001111100000 '
b10001011000111110000001111100000 A
b10001011000111110000001111100000 P
b10011 %
#1820
b0 E
b0 S
b0 [
1+
b1111111111111111111111111111111111111111111111111111111111100000 8
b1111111111111111111111111111111111111111111111111111111111100000 C
b0 7
b0 @
b0 O
b0 6
b0 ?
#1824
0!
#1919
b100 #
b100 &
b100 >
#1920
b1 4
b1 ;
b1 =
b0 5
b0 :
b0 <
b0 L
1,
1.
b11111000010 9
b11111000010 M
b10 W
b11111000010000000000000000000010 $
b11111000010000000000000000000010 '
b11111000010000000000000000000010 A
b11111000010000000000000000000010 P
b10100 %
#1921
b10 E
b10 S
b10 [
b0 8
b0 C
b1 7
b1 @
b1 O
b1 6
b1 ?
#2020
b1000 #
b1000 &
b1000 >
#2021
b11 W
b11111000010000001000000000000011 $
b11111000010000001000000000000011 '
b11111000010000001000000000000011 A
b11111000010000001000000000000011 P
b10101 %
#2022
1)
b11 E
b11 S
b11 [
b10000 8
b10000 C
#2121
b1100 #
b1100 &
b1100 >
#2122
b111 W
b11111000010000010000000000000111 $
b11111000010000010000000000000111 '
b11111000010000010000000000000111 A
b11111000010000010000000000000111 P
b10110 %
#2123
b111 E
b111 S
b111 [
b100000 8
b100000 C
bx 7
bx @
bx O
#2222
b10000 #
b10000 &
b10000 >
#2223
b0 4
b0 ;
b0 =
0,
0.
b10 5
b10 :
b10 <
b10 L
b10101010000 9
b10101010000 M
b100 W
b10101010000000100000000011100100 $
b10101010000000100000000011100100 '
b10101010000000100000000011100100 A
b10101010000000100000000011100100 P
b10111 %
#2224
0)
b100 E
b100 S
b100 [
b1000000 8
b1000000 C
bx 6
bx ?
#2323
b10100 #
b10100 &
b10100 >
#2324
b10001010000 9
b10001010000 M
b101 W
b10001010000001000000000001100101 $
b10001010000001000000000001100101 '
b10001010000001000000000001100101 A
b10001010000001000000000001100101 P
b11000 %
#2325
1)
b101 E
b101 S
b101 [
b10000000 8
b10000000 C
#2424
b11000 #
b11000 &
b11000 >
#2425
b10001011000 9
b10001011000 M
b10001011000001000000000010100101 $
b10001011000001000000000010100101 '
b10001011000001000000000010100101 A
b10001011000001000000000010100101 P
b11001 %
#2525
b11100 #
b11100 &
b11100 >
#2526
b11001011000 9
b11001011000 M
b1000 W
b11001011000001110000000010101000 $
b11001011000001110000000010101000 '
b11001011000001110000000010101000 A
b11001011000001110000000010101000 P
b11010 %
#2527
0)
b1000 E
b1000 S
b1000 [
b11100000 8
b11100000 C
#2626
b100000 #
b100000 &
b100000 >
#2627
0(
11
1*
b10110100000 9
b10110100000 M
b10110100000000000000000101101000 $
b10110100000000000000000101101000 '
b10110100000000000000000101101000 A
b10110100000000000000000101101000 P
b11011 %
#2628
0+
b1011 8
b1011 C
#2632
1!
#2727
b0 #
b0 &
b0 >
#2728
1(
01
0*
b10001011000 9
b10001011000 M
b0 W
b10001011000111110000001111100000 $
b10001011000111110000001111100000 '
b10001011000111110000001111100000 A
b10001011000111110000001111100000 P
b11100 %
#2729
b0 E
b0 S
b0 [
1+
b1111111111111111111111111111111111111111111111111111111111100000 8
b1111111111111111111111111111111111111111111111111111111111100000 C
b0 7
b0 @
b0 O
b0 6
b0 ?
#2733
0!
#2828
b100 #
b100 &
b100 >
#2829
b1 4
b1 ;
b1 =
b0 5
b0 :
b0 <
b0 L
1,
1.
b11111000010 9
b11111000010 M
b10 W
b11111000010000000000000000000010 $
b11111000010000000000000000000010 '
b11111000010000000000000000000010 A
b11111000010000000000000000000010 P
b11101 %
#2830
b10 E
b10 S
b10 [
b0 8
b0 C
b1 7
b1 @
b1 O
b1 6
b1 ?
#2929
b1000 #
b1000 &
b1000 >
#2930
b11 W
b11111000010000001000000000000011 $
b11111000010000001000000000000011 '
b11111000010000001000000000000011 A
b11111000010000001000000000000011 P
b11110 %
